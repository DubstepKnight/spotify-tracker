import "../styles/globals.css";
import type { AppProps } from "next/app";
import {
  AppShell,
  ColorScheme,
  ColorSchemeProvider,
  Container,
  MantineProvider,
} from "@mantine/core";
import { useState, useEffect } from "react";
import Head from "next/head";
import { Header } from "../components";
import { useRouter } from "next/router";
import NextNProgress from "nextjs-progressbar";
import { GetServerSidePropsContext } from "next";
import { getCookie, setCookie } from "cookies-next";
// import ClientCookies from "js-cookie";

export const IP_ADDRESS = "10.101.7.9"; // office IP address
// export const IP_ADDRESS = "192.168.1.253"; // home IP address

function MyApp(
  props: AppProps & { colorScheme: ColorScheme; isLoggedIn: boolean }
) {
  const { Component, pageProps, isLoggedIn } = props;
  const router = useRouter();
  const [colorScheme, setColorScheme] = useState<ColorScheme>(
    props.colorScheme
  );

  const toggleColorScheme = (value?: ColorScheme) => {
    const nextColorScheme =
      value || (colorScheme === "dark" ? "light" : "dark");
    setColorScheme(nextColorScheme);
    setCookie("mantine-color-scheme", nextColorScheme, {
      maxAge: 60 * 60 * 24 * 30,
    });
  };

  console.log("isLoggedIn", isLoggedIn);

  // const [isLoggedIn, setIsLoggedIn] = useState<boolean>(props.isLoggedIn);
  // const [isLoading, setIsLoading] = useState<boolean>(true);

  // useEffect(() => {
  //   const cookie = ClientCookies.get("is-logged-in");
  //   if (cookie === "true") {
  //     setIsLoggedIn(true);
  //   }
  //   setIsLoading(false);
  // }, [isLoggedIn]);

  return (
    <>
      <NextNProgress
        color='#1DB954'
        startPosition={0.3}
        stopDelayMs={200}
        height={8}
        showOnShallow={true}
        options={{ showSpinner: false }}
      />
      <ColorSchemeProvider
        colorScheme={colorScheme}
        toggleColorScheme={toggleColorScheme}
      >
        <MantineProvider
          theme={{
            colorScheme: colorScheme,
            colors: {
              primary: ["#1DB954", "#1ED760"],
              backgroundColor: ["#ffffff", "#191414"],
            },
          }}
        >
          <Head>
            <title> Spotify song data visualizer </title>
            <meta name='description' content='Generated by create next app' />
            <link rel='icon' href='/favicon.ico' />
          </Head>
          <AppShell
            padding={"md"}
            fixed={true}
            header={<Header isLoggedIn={isLoggedIn} />}
            styles={(theme) => ({
              root: {
                backgroundColor:
                  theme.colorScheme === "dark"
                    ? theme.colors.backgroundColor[1]
                    : theme.colors.backgroundColor[0],
                color: theme.colorScheme === "dark" ? "white" : "black",
              },
            })}
          >
            <Container size={"xl"} px={0}>
              <Component {...pageProps} key={router.asPath} />
            </Container>
          </AppShell>
        </MantineProvider>
      </ColorSchemeProvider>
    </>
  );
}

export default MyApp;

MyApp.getInitialProps = ({ ctx }: { ctx: GetServerSidePropsContext }) => ({
  colorScheme: getCookie("mantine-color-scheme", ctx) || "light",
  isLoggedIn: getCookie("is-logged-in", ctx) || false,
});
